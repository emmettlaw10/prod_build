[{"C:\\Users\\Emmett\\Documents\\gb_final\\Gaiderbytes\\src\\index.js":"1","C:\\Users\\Emmett\\Documents\\gb_final\\Gaiderbytes\\src\\App.js":"2","C:\\Users\\Emmett\\Documents\\gb_final\\Gaiderbytes\\src\\reportWebVitals.js":"3","C:\\Users\\Emmett\\Documents\\gb_final\\Gaiderbytes\\src\\pages\\StudentApplication.js":"4","C:\\Users\\Emmett\\Documents\\gb_final\\Gaiderbytes\\src\\pages\\ServerError.js":"5","C:\\Users\\Emmett\\Documents\\gb_final\\Gaiderbytes\\src\\pages\\CoachApplication.js":"6","C:\\Users\\Emmett\\Documents\\gb_final\\Gaiderbytes\\src\\pages\\ApplicationSuccess.js":"7","C:\\Users\\Emmett\\Documents\\gb_final\\Gaiderbytes\\src\\pages\\Home.js":"8","C:\\Users\\Emmett\\Documents\\gb_final\\Gaiderbytes\\src\\pages\\ApplicationFail.js":"9","C:\\Users\\Emmett\\Documents\\gb_final\\Gaiderbytes\\src\\pages\\AboutUs.js":"10","C:\\Users\\Emmett\\Documents\\gb_final\\Gaiderbytes\\src\\pages\\CoachesPage.js":"11","C:\\Users\\Emmett\\Documents\\gb_final\\Gaiderbytes\\src\\pages\\Eligible.js":"12","C:\\Users\\Emmett\\Documents\\gb_final\\Gaiderbytes\\src\\pages\\EligibilityCheck.js":"13","C:\\Users\\Emmett\\Documents\\gb_final\\Gaiderbytes\\src\\pages\\Ineligible.js":"14","C:\\Users\\Emmett\\Documents\\gb_final\\Gaiderbytes\\src\\pages\\StudentsPage.js":"15","C:\\Users\\Emmett\\Documents\\gb_final\\Gaiderbytes\\src\\pages\\AdminUnauthorized.js":"16","C:\\Users\\Emmett\\Documents\\gb_final\\Gaiderbytes\\src\\pages\\AdminLogin.js":"17","C:\\Users\\Emmett\\Documents\\gb_final\\Gaiderbytes\\src\\pages\\AdminCoach.js":"18","C:\\Users\\Emmett\\Documents\\gb_final\\Gaiderbytes\\src\\pages\\MatchSuccess.js":"19","C:\\Users\\Emmett\\Documents\\gb_final\\Gaiderbytes\\src\\pages\\AdminStudent.js":"20","C:\\Users\\Emmett\\Documents\\gb_final\\Gaiderbytes\\src\\pages\\MatchingPage.js":"21","C:\\Users\\Emmett\\Documents\\gb_final\\Gaiderbytes\\src\\pages\\CoachMax.js":"22","C:\\Users\\Emmett\\Documents\\gb_final\\Gaiderbytes\\src\\pages\\StudentMatchedAlready.js":"23","C:\\Users\\Emmett\\Documents\\gb_final\\Gaiderbytes\\src\\pages\\statusCheck\\StatusCheck.js":"24","C:\\Users\\Emmett\\Documents\\gb_final\\Gaiderbytes\\src\\components\\navbar\\Navbar.js":"25","C:\\Users\\Emmett\\Documents\\gb_final\\Gaiderbytes\\src\\components\\adminNavbar\\adminNavbar.js":"26","C:\\Users\\Emmett\\Documents\\gb_final\\Gaiderbytes\\src\\components\\page_bubble\\page_bubble.js":"27","C:\\Users\\Emmett\\Documents\\gb_final\\Gaiderbytes\\src\\components\\cateogry_box\\category_box.js":"28","C:\\Users\\Emmett\\Documents\\GitHub\\prod_build\\src\\index.js":"29","C:\\Users\\Emmett\\Documents\\GitHub\\prod_build\\src\\App.js":"30","C:\\Users\\Emmett\\Documents\\GitHub\\prod_build\\src\\reportWebVitals.js":"31","C:\\Users\\Emmett\\Documents\\GitHub\\prod_build\\src\\pages\\ApplicationSuccess.js":"32","C:\\Users\\Emmett\\Documents\\GitHub\\prod_build\\src\\pages\\ApplicationFail.js":"33","C:\\Users\\Emmett\\Documents\\GitHub\\prod_build\\src\\pages\\StudentApplication.js":"34","C:\\Users\\Emmett\\Documents\\GitHub\\prod_build\\src\\pages\\CoachApplication.js":"35","C:\\Users\\Emmett\\Documents\\GitHub\\prod_build\\src\\pages\\ServerError.js":"36","C:\\Users\\Emmett\\Documents\\GitHub\\prod_build\\src\\pages\\Home.js":"37","C:\\Users\\Emmett\\Documents\\GitHub\\prod_build\\src\\pages\\CoachesPage.js":"38","C:\\Users\\Emmett\\Documents\\GitHub\\prod_build\\src\\pages\\AboutUs.js":"39","C:\\Users\\Emmett\\Documents\\GitHub\\prod_build\\src\\pages\\Eligible.js":"40","C:\\Users\\Emmett\\Documents\\GitHub\\prod_build\\src\\pages\\Ineligible.js":"41","C:\\Users\\Emmett\\Documents\\GitHub\\prod_build\\src\\pages\\StudentsPage.js":"42","C:\\Users\\Emmett\\Documents\\GitHub\\prod_build\\src\\pages\\EligibilityCheck.js":"43","C:\\Users\\Emmett\\Documents\\GitHub\\prod_build\\src\\pages\\AdminLogin.js":"44","C:\\Users\\Emmett\\Documents\\GitHub\\prod_build\\src\\pages\\AdminUnauthorized.js":"45","C:\\Users\\Emmett\\Documents\\GitHub\\prod_build\\src\\pages\\AdminCoach.js":"46","C:\\Users\\Emmett\\Documents\\GitHub\\prod_build\\src\\pages\\MatchSuccess.js":"47","C:\\Users\\Emmett\\Documents\\GitHub\\prod_build\\src\\pages\\AdminStudent.js":"48","C:\\Users\\Emmett\\Documents\\GitHub\\prod_build\\src\\pages\\MatchingPage.js":"49","C:\\Users\\Emmett\\Documents\\GitHub\\prod_build\\src\\pages\\CoachMax.js":"50","C:\\Users\\Emmett\\Documents\\GitHub\\prod_build\\src\\pages\\StudentMatchedAlready.js":"51","C:\\Users\\Emmett\\Documents\\GitHub\\prod_build\\src\\pages\\statusCheck\\StatusCheck.js":"52","C:\\Users\\Emmett\\Documents\\GitHub\\prod_build\\src\\components\\adminNavbar\\adminNavbar.js":"53","C:\\Users\\Emmett\\Documents\\GitHub\\prod_build\\src\\components\\navbar\\Navbar.js":"54","C:\\Users\\Emmett\\Documents\\GitHub\\prod_build\\src\\components\\cateogry_box\\category_box.js":"55","C:\\Users\\Emmett\\Documents\\GitHub\\prod_build\\src\\components\\page_bubble\\page_bubble.js":"56"},{"size":552,"mtime":1697098456334,"results":"57","hashOfConfig":"58"},{"size":7745,"mtime":1697098456329,"results":"59","hashOfConfig":"58"},{"size":375,"mtime":1697098456342,"results":"60","hashOfConfig":"58"},{"size":13651,"mtime":1697098456340,"results":"61","hashOfConfig":"58"},{"size":328,"mtime":1697098456340,"results":"62","hashOfConfig":"58"},{"size":21394,"mtime":1697098456337,"results":"63","hashOfConfig":"58"},{"size":339,"mtime":1697098456337,"results":"64","hashOfConfig":"58"},{"size":867,"mtime":1697098456339,"results":"65","hashOfConfig":"58"},{"size":299,"mtime":1697098456336,"results":"66","hashOfConfig":"58"},{"size":2901,"mtime":1697098456335,"results":"67","hashOfConfig":"58"},{"size":1881,"mtime":1697098456338,"results":"68","hashOfConfig":"58"},{"size":628,"mtime":1697098456338,"results":"69","hashOfConfig":"58"},{"size":7022,"mtime":1697098456338,"results":"70","hashOfConfig":"58"},{"size":353,"mtime":1697098456339,"results":"71","hashOfConfig":"58"},{"size":1618,"mtime":1697098456341,"results":"72","hashOfConfig":"58"},{"size":606,"mtime":1697098456336,"results":"73","hashOfConfig":"58"},{"size":2076,"mtime":1697098456335,"results":"74","hashOfConfig":"58"},{"size":5576,"mtime":1697098456335,"results":"75","hashOfConfig":"58"},{"size":582,"mtime":1697098456339,"results":"76","hashOfConfig":"58"},{"size":5604,"mtime":1697098456336,"results":"77","hashOfConfig":"58"},{"size":12604,"mtime":1697098456339,"results":"78","hashOfConfig":"58"},{"size":304,"mtime":1697098456337,"results":"79","hashOfConfig":"58"},{"size":316,"mtime":1697098456340,"results":"80","hashOfConfig":"58"},{"size":2791,"mtime":1697098456341,"results":"81","hashOfConfig":"58"},{"size":1500,"mtime":1697098456331,"results":"82","hashOfConfig":"58"},{"size":1264,"mtime":1697098456330,"results":"83","hashOfConfig":"58"},{"size":962,"mtime":1697098456332,"results":"84","hashOfConfig":"58"},{"size":791,"mtime":1697098456331,"results":"85","hashOfConfig":"58"},{"size":552,"mtime":1697098456334,"results":"86","hashOfConfig":"87"},{"size":7745,"mtime":1697122507481,"results":"88","hashOfConfig":"87"},{"size":375,"mtime":1697098456342,"results":"89","hashOfConfig":"87"},{"size":339,"mtime":1697098456337,"results":"90","hashOfConfig":"87"},{"size":299,"mtime":1697098456336,"results":"91","hashOfConfig":"87"},{"size":13651,"mtime":1697098456340,"results":"92","hashOfConfig":"87"},{"size":21394,"mtime":1697098456337,"results":"93","hashOfConfig":"87"},{"size":328,"mtime":1697098456340,"results":"94","hashOfConfig":"87"},{"size":867,"mtime":1697098456339,"results":"95","hashOfConfig":"87"},{"size":1881,"mtime":1697098456338,"results":"96","hashOfConfig":"87"},{"size":2901,"mtime":1697098456335,"results":"97","hashOfConfig":"87"},{"size":628,"mtime":1697098456338,"results":"98","hashOfConfig":"87"},{"size":353,"mtime":1697098456339,"results":"99","hashOfConfig":"87"},{"size":1618,"mtime":1697098456341,"results":"100","hashOfConfig":"87"},{"size":7022,"mtime":1697098456338,"results":"101","hashOfConfig":"87"},{"size":2076,"mtime":1697098456335,"results":"102","hashOfConfig":"87"},{"size":606,"mtime":1697098456336,"results":"103","hashOfConfig":"87"},{"size":5576,"mtime":1697098456335,"results":"104","hashOfConfig":"87"},{"size":582,"mtime":1697098456339,"results":"105","hashOfConfig":"87"},{"size":5604,"mtime":1697098456336,"results":"106","hashOfConfig":"87"},{"size":12604,"mtime":1697098456339,"results":"107","hashOfConfig":"87"},{"size":304,"mtime":1697098456337,"results":"108","hashOfConfig":"87"},{"size":316,"mtime":1697098456340,"results":"109","hashOfConfig":"87"},{"size":2791,"mtime":1697098456341,"results":"110","hashOfConfig":"87"},{"size":1264,"mtime":1697098456330,"results":"111","hashOfConfig":"87"},{"size":1500,"mtime":1697098456331,"results":"112","hashOfConfig":"87"},{"size":791,"mtime":1697098456331,"results":"113","hashOfConfig":"87"},{"size":962,"mtime":1697098456332,"results":"114","hashOfConfig":"87"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1f19mkp",{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"128"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"135"},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142"},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149"},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159"},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172"},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","suppressedMessages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","suppressedMessages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185"},{"filePath":"186","messages":"187","suppressedMessages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","suppressedMessages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","suppressedMessages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195"},{"filePath":"196","messages":"197","suppressedMessages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","suppressedMessages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","suppressedMessages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","suppressedMessages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","suppressedMessages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"a2mgrs",{"filePath":"211","messages":"212","suppressedMessages":"213","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"214","messages":"215","suppressedMessages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"217","messages":"218","suppressedMessages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","suppressedMessages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"223","messages":"224","suppressedMessages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","suppressedMessages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"229","messages":"230","suppressedMessages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"232","messages":"233","suppressedMessages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"235","messages":"236","suppressedMessages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"238","messages":"239","suppressedMessages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"241","messages":"242","suppressedMessages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"244","messages":"245","suppressedMessages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"247","messages":"248","suppressedMessages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"250","messages":"251","suppressedMessages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"253","messages":"254","suppressedMessages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"256","messages":"257","suppressedMessages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"259","messages":"260","suppressedMessages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"262","messages":"263","suppressedMessages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"265","messages":"266","suppressedMessages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"268","messages":"269","suppressedMessages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"271","messages":"272","suppressedMessages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"274","messages":"275","suppressedMessages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"277","messages":"278","suppressedMessages":"279","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"280","messages":"281","suppressedMessages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"283","messages":"284","suppressedMessages":"285","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"286","messages":"287","suppressedMessages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"289","messages":"290","suppressedMessages":"291","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Emmett\\Documents\\gb_final\\Gaiderbytes\\src\\index.js",[],[],"C:\\Users\\Emmett\\Documents\\gb_final\\Gaiderbytes\\src\\App.js",["292","293","294"],[],"import { BrowserRouter, Route, Routes, useLocation } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport StudentApplication from \"./pages/StudentApplication\";\r\nimport CoachApplication from \"./pages/CoachApplication\";\r\nimport StatusCheck from './pages/statusCheck/StatusCheck';\r\nimport ApplicationSuccess from \"./pages/ApplicationSuccess\";\r\nimport ApplicationFail from \"./pages/ApplicationFail\";\r\nimport ServerError from \"./pages/ServerError\";\r\nimport Home from './pages/Home';\r\nimport AboutUs from \"./pages/AboutUs\";\r\nimport CoachesPage from './pages/CoachesPage';\r\nimport { useState } from \"react\";\r\nimport Navbar from './components/navbar/Navbar';\r\nimport Eligible from \"./pages/Eligible\";\r\nimport Ineligible from \"./pages/Ineligible\";\r\nimport EligibilityCheck from \"./pages/EligibilityCheck\";\r\nimport StudentsPage from \"./pages/StudentsPage\";\r\nimport AdminLogin from \"./pages/AdminLogin\";\r\nimport AdminUnauthorized from \"./pages/AdminUnauthorized\";\r\nimport MatchingPage from \"./pages/MatchingPage\";\r\nimport AdminStudent from \"./pages/AdminStudent\";\r\nimport AdminNavbar from \"./components/adminNavbar/adminNavbar\";\r\nimport AdminCoach from './pages/AdminCoach';\r\nimport matchSuccess from \"./pages/MatchSuccess\";\r\nimport StudentMatchedAlready from \"./pages/StudentMatchedAlready\";\r\nimport coachMax from \"./pages/CoachMax\";\r\nimport MatchSuccess from \"./pages/MatchSuccess\";\r\nimport CoachMax from \"./pages/CoachMax\";\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n  const [student, setStudent] = useState({\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    email: \"\",\r\n    province: \"\",\r\n    city: \"\",\r\n    address: \"\",\r\n    postal_code: \"\",\r\n    date_of_birth: \"\",\r\n    pronoun: \"\",\r\n    institution_name: \"\",\r\n    program_name: \"\",\r\n    emergency_contact_first_name: \"\",\r\n    emergency_contact_last_name: \"\",\r\n    emergency_contact_phone: \"\",\r\n    emergency_contact_relation: \"\",\r\n  });\r\n\r\n  const [coach, setCoach] = useState({\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    email: \"\",\r\n    province: \"\",\r\n    city: \"\",\r\n    address: \"\",\r\n    postal_code: \"\",\r\n    date_of_birth: \"\",\r\n    pronoun: \"\",\r\n    years_of_experience:\"\",\r\n    self_identification: \"\",\r\n    gen_status: \"\",\r\n    languages: \"\",\r\n    institutions: \"\",\r\n    availability: \"\",\r\n    introduction: \"\",\r\n    reside_in_canada: \"\",\r\n    post_secondary_exp: \"\",\r\n    post_secondary_program: \"\"\r\n\r\n  });\r\n\r\n  const [user, setUser] = useState({\r\n    username: \"\",\r\n    password: \"\"\r\n  })\r\n\r\n  const handleSave = async (values) => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/studentApplication\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(values),\r\n      });\r\n      if (response.status === 201) {\r\n        console.log(\"Application submitted successfully\");\r\n        setStudent(values);\r\n        window.location.pathname = \"/success\";\r\n      } else if (response.status === 400) {\r\n        console.log(\"Student has already applied\");\r\n        window.location.pathname = \"/fail\";\r\n      } else if (response.status === 500) {\r\n        console.log(\"Server Error\");\r\n        window.location.pathname = \"/serverError\"\r\n      }\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  };\r\n\r\n  const handleSaveCoach = async (formData) => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/coachApplication\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n      if (response.status === 201) {\r\n        console.log(\"Application submitted successfully\");\r\n        setCoach(formData);\r\n        window.location.pathname = \"/success\";\r\n      } else if (response.status === 400) {\r\n        console.log(\"Coach has already applied\");\r\n        window.location.pathname = \"/fail\";\r\n      } else if (response.status === 500) {\r\n        console.log(\"Server Error\");\r\n        window.location.pathname = \"/serverError\";\r\n      }\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  };\r\n\r\n  const handleLogin = async (formData) => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/adminLogin\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(formData),\r\n\r\n      });\r\n      if (response.status === 300) {\r\n        setUser(formData);\r\n        window.location.pathname = \"/adminDashboard/students\";\r\n      } else if (response.status === 301) {\r\n        console.log(response.status);\r\n        window.location.pathname = \"/adminUnauthorized\";\r\n      } else if (response.status === 500) {\r\n        console.log(\"Server Error\");\r\n        window.location.pathname = \"/serverError\";\r\n      }\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  };\r\n\r\n  const match = async (data) => {\r\n    try {\r\n      console.log(data)\r\n      const response = await fetch(\"http://localhost:5000/admin/match\", {\r\n        method: \"PUT\",\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: data,\r\n      });\r\n      if (response.status === 206) {\r\n        console.log(response.status)\r\n        window.location.pathname = \"/matchSuccess\";\r\n      } else if (response.status === 406) {\r\n        console.log(response.status);\r\n        window.location.pathname = \"/matchFailStudent\";\r\n      }else if (response.status === 416) {\r\n        console.log(response.status);\r\n        window.location.pathname = \"/matchFailCoach\";\r\n      } else if (response.status === 500) {\r\n        console.log(\"Server Error\");\r\n        window.location.pathname = \"/serverError\";\r\n      }\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <DynamicNavbar/>\r\n        <div className=\"pt-[75px] px-[10%]\">\r\n          <Routes>\r\n            <Route exact path=\"/\" element={<Home/>}/>\r\n            <Route exact path=\"/student-application\" element={<StudentApplication onSave={handleSave} student={student} />} />\r\n            <Route exact path=\"/coach-application\" element={<CoachApplication onSave={handleSaveCoach} coach={coach}/>} />\r\n            <Route exact path=\"/success\" element={<ApplicationSuccess/>} />\r\n            <Route exact path=\"/fail\" element={<ApplicationFail/>} />\r\n            <Route exact path=\"/serverError\" element={<ServerError/>} />\r\n            <Route exact path=\"/checkStatus\" element={<StatusCheck/>} />\r\n            <Route exact path=\"/eligibilityCheck\" element={<EligibilityCheck/>}/>\r\n            <Route exact path=\"/eligible\" element={<Eligible/>} />\r\n            <Route exact path=\"/ineligible\" element={<Ineligible/>} />\r\n            <Route exact path=\"/students\" element={<StudentsPage/>} />\r\n            <Route exact path=\"/coaches\" element={<CoachesPage/>} />\r\n            <Route exact path=\"/about-us\" element={<AboutUs/>}/>\r\n            <Route exact path=\"/admin\" element={<AdminLogin onSave={handleLogin}/>}/>\r\n            <Route exact path=\"/adminDashboard/students\" element={<AdminStudent/>}/>\r\n            <Route exact path=\"/adminDashboard/coaches\" element={<AdminCoach/>}/>\r\n            <Route exact path=\"/adminUnauthorized\" element={<AdminUnauthorized/>}/>\r\n            <Route exact path=\"/adminDashboard/matching\" element={<MatchingPage createMatch={match}/>}/>\r\n            <Route exact path=\"/matchFailStudent\" element={<StudentMatchedAlready/>}/>\r\n            <Route exact path=\"/matchFailCoach\" element={<CoachMax/>}/>\r\n            <Route exact path=\"/matchSuccess\" element={<MatchSuccess/>}/>\r\n          </Routes>\r\n        </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nfunction DynamicNavbar() {\r\n  const location = useLocation();\r\n  return /^\\/adminDashboard\\b/.test(location.pathname) ? <AdminNavbar/> : <Navbar/>;\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Emmett\\Documents\\gb_final\\Gaiderbytes\\src\\reportWebVitals.js",[],[],"C:\\Users\\Emmett\\Documents\\gb_final\\Gaiderbytes\\src\\pages\\StudentApplication.js",["295"],[],"import React,{useState} from \"react\";\r\nimport {useForm, useController} from \"react-hook-form\"\r\nimport Select from \"react-select\"\r\nimport {zodResolver} from \"@hookform/resolvers/zod\";\r\nimport  {z, string} from \"zod\";\r\nimport {FormControlLabel, Radio, RadioGroup} from \"@mui/material\";\r\n\r\n\r\n\r\n    const StudentApplication = ({onSave}) => {\r\n\r\n        const [checked, setChecked] = useState(null);\r\n\r\n        const provinces = [\r\n            {value: \"alberta\", label: \"Alberta\"},\r\n            {value: \"british columbia\", label: \"British Columbia\"},\r\n            {value: \"manitoba\", label: \"Manitoba\"},\r\n            {value: \"new brunswick\", label: \"New Brunswick\"},\r\n            {value: \"newfoundland and labrador\", label: \"Newfoundland and Labrador\"},\r\n            {value: \"northwest territories\", label: \"Northwest Territories\"},\r\n            {value: \"nova scotia\", label: \"Nova Scotia\"},\r\n            {value: \"nunavut\", label: \"Nunavut\"},\r\n            {value: \"ontario\", label: \"Ontario\"},\r\n            {value: \"prince edward island\", label: \"Prince Edward Island\"},\r\n            {value: \"quebec\", label: \"Quebec\"},\r\n            {value: \"saskatchewan\", label: \"Saskatchewan\"},\r\n            {value: \"yukon\", label: \"Yukon\"},\r\n        ];\r\n\r\n        //outlining requirements for input (validation)\r\n        const schema = z.object({\r\n            first_name: z.string().regex(/^[A-Za-z]+$/).min(2).max(20),\r\n            last_name: z.string().regex(/^[A-Za-z]+$/).min(2).max(20),\r\n            email: string().email(),\r\n            province: z.string(),\r\n            city: string().regex(/^[A-Za-z]+$/).min(2).max(40),\r\n            address: string().min(5),\r\n            postal_code: string().length(6),\r\n            date_of_birth: string(),\r\n            pronoun: z.string().min(1),\r\n            institution_name: z.string().min(1),\r\n            program_name: z.string().min(1),\r\n            emergency_contact_first_name: z.string().regex(/^[A-Za-z]+$/).min(2).max(20),\r\n            emergency_contact_last_name: z.string().regex(/^[A-Za-z]+$/).min(2).max(20),\r\n            emergency_contact_phone: z.string().regex(/^[0-9]+$/).length(10),\r\n            emergency_contact_relation: z.string().min(1)\r\n        });\r\n\r\n        const {register, handleSubmit, formState, control} = useForm({resolver: zodResolver(schema)});\r\n\r\n        const {errors} = formState;\r\n\r\n        const {field: field} = useController({name: 'province', control});\r\n\r\n        const {field: field1} = useController({name: 'pronoun', control})\r\n\r\n        const handleProvinceSelectChange = (option) => {\r\n            field.onChange(option.value)\r\n        }\r\n\r\n        const handlePronounSelectChange = (option) => {\r\n            field1.onChange(option.target.value)\r\n        }\r\n\r\n        //function to save form values\r\n        const handleSave = (formValues) => {\r\n            console.log(formValues)\r\n            onSave(formValues)\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"m-2 shadow-lg bg-red-700 text-white rounded-md p-3\">\r\n                <h1 className=\"text-3xl\"> Student Application Form</h1>\r\n                    <p>Thank you for your interest. Please fill out the form below to apply to receive coaching.</p>\r\n                </div>\r\n                <div className=\"shadow-lg bg-slate-200 p-3 rounded-md m-2\">\r\n                <div className=\"studentApplicationForm\">\r\n                    \r\n                    <form onSubmit={handleSubmit(handleSave)}>\r\n                        <div>\r\n                            <h1 className=\"text-xl\">Personal Information</h1>\r\n                            <label htmlFor=\"first_name\">First Name: </label>\r\n                            <input type=\"text\" className=\"rounded-md p-3 ml-5 w-50\" placeholder=\"Enter first name\"\r\n                                   {...register(\"first_name\")}\r\n                            />\r\n                            <div style={{color: \"red\"}}>\r\n                                {errors.first_name?.message}\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"last_name\">Last Name:</label>\r\n                            <input type=\"text\" className=\"rounded-md p-3 m-1 ml-7 w-50\" placeholder=\"Enter last name\"\r\n                                   {...register(\"last_name\")}\r\n                            />\r\n                            <div style={{color: \"red\"}}>\r\n                                {errors.last_name?.message}\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"email\">Email Address:</label>\r\n                            <input type=\"email\" placeholder=\"name@example.com\" className=\"p-3 m-1 w-50 rounded-md\"\r\n                                   {...register(\"email\")}\r\n                            />\r\n                            <div style={{color: \"red\"}}>\r\n                                {errors.email?.message}\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"province\">Province:</label>\r\n                            <Select className=\"m-1 w-60 rounded-md\"\r\n                                    value ={provinces.find(({value}) => value ===field.value)}\r\n                                    onChange={handleProvinceSelectChange}\r\n                                    options={provinces}\r\n                            />\r\n                            <div style={{color: \"red\"}}>\r\n                                {errors.province?.message}\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"city\">City:</label>\r\n                            <input type=\"text\" className=\"p-3 m-1 ml-20 w-60 rounded-md\" placeholder=\"City\"\r\n                                   {...register(\"city\")}\r\n                            />\r\n                            <div style={{color: \"red\"}}>\r\n                                {errors.city?.message}\r\n                            </div>\r\n                        </div>\r\n                        <label htmlFor=\"address\">Street Address:</label>\r\n                        <input type=\"text\" className=\"p-3 m-1 w-60 rounded-md\" placeholder=\"123 street name\"\r\n                               {...register(\"address\")}\r\n                        />\r\n                        <div style={{color: \"red\"}}>\r\n                            {errors.address?.message}\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"postal_code\">Postal Code:</label>\r\n                            <input type=\"text\" className=\"p-3 m-1 ml-5 w-60 rounded-md\" placeholder=\"A4B1A1\"\r\n                                   {...register(\"postal_code\")}\r\n                            />\r\n                            <div style={{color: \"red\"}}>\r\n                                {errors.postal_code?.message}\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"date_of_birth\">Date of Birth:</label>\r\n                            <input type=\"date\" className=\"p-3 m-1 ml-4 w-60 rounded-md\"\r\n                                   {...register(\"date_of_birth\")}\r\n                            />\r\n                            <div style={{color: \"red\"}}>\r\n                                {errors.date_of_birth?.message}\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <RadioGroup onChange={handlePronounSelectChange}>\r\n                                <label>Pronouns:</label>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                    <Radio\r\n                                        value={\"he/him\"}\r\n                                        onClick={() => setChecked(false)}\r\n                                    />\r\n                                    }\r\n                                    label={\"He/Him\"}/>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                    <Radio\r\n                                        value={\"she/her\"}\r\n                                        onClick={() => setChecked(false)}\r\n                                    />} label={\"She/Her\"}/>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Radio\r\n                                            onClick={() => setChecked(true)}\r\n                                            value=\"No\"\r\n                                            label=\"other\"\r\n                                        />\r\n                                    }\r\n                                    label={\r\n                                        checked ? (\r\n                                                <input\r\n                                                    disabled={!checked}\r\n                                                    className=\"p-3 m-1 w-60 rounded-md\"\r\n                                                    placeholder=\"Enter Pronoun\"\r\n                                                    onChange={handlePronounSelectChange}\r\n                                                />\r\n                                        ) : (\r\n                                            \"Other\"\r\n                                        )\r\n                                    }\r\n                                />\r\n                            </RadioGroup>\r\n                            <div style={{color: \"red\"}}>\r\n                                {errors.pronoun?.message}\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <h1 className=\"text-xl\">Institution Information</h1>\r\n                            <label htmlFor=\"institution_name\">Name of Post-secondary institution:</label>\r\n                            <input type=\"text\" className=\"p-3 m-1 w-60 rounded-md\" placeholder=\"Enter name of school\"\r\n                                   {...register(\"institution_name\")}\r\n                            />\r\n                            <div style={{color: \"red\"}}>\r\n                                {errors.institution_name?.message}\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"program_name\">Program Name:</label>\r\n                            <input type=\"text\" className=\"p-3 m-1 w-60 rounded-md\" placeholder=\"Enter name of program\"\r\n                                   {...register(\"program_name\")}\r\n                            />\r\n                            <div style={{color: \"red\"}}>\r\n                                {errors.program_name?.message}\r\n                            </div>\r\n                        </div>\r\n                        <h1 className=\"text-xl\">Emergency Contact</h1>\r\n                        <div>\r\n                            <label htmlFor=\"emergency_contact_first_name\">First Name:</label>\r\n                            <input type=\"string\" className=\"p-3 m-1 w-60 rounded-md\" placeholder=\"Enter contact's first name\"\r\n                                   {...register(\"emergency_contact_first_name\")}\r\n                            />\r\n                            <div style={{color: \"red\"}}>\r\n                                {errors.emergency_contact_first_name?.message}\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"emergency_contact_last_name\">Last Name:</label>\r\n                            <input type=\"string\" className=\"p-3 m-1 w-60 rounded-md\" placeholder=\"Enter contact's last name\"\r\n                                   {...register(\"emergency_contact_last_name\")}\r\n                            />\r\n                            <div style={{color: \"red\"}}>\r\n                                {errors.emergency_contact_last_name?.message}\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"emergency_contact_phone\">Phone Number:</label>\r\n                            <input type=\"string\" className=\"rounded-md p-3 m-1\" placeholder=\"1234567890\"\r\n                                   {...register(\"emergency_contact_phone\")}\r\n                            />\r\n                            <div style={{color: \"red\"}}>\r\n                                {errors.emergency_contact_phone?.message}\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"emergency_contact_relation\">Emergency Contact Relation:</label>\r\n                            <input type=\"string\" className=\"rounded-md p-3 m-1\" placeholder=\"Contact's relation to you\"\r\n                                   {...register(\"emergency_contact_relation\")}\r\n                            />\r\n                            <div style={{color: \"red\"}}>\r\n                                {errors.emergency_contact_relation?.message}\r\n                            </div>\r\n                        </div>\r\n                        <button className=\"bg-red-400 p-3 rounded-md hover:bg-red-200 m-2 ml-2\" type=\"submit\">Apply</button>\r\n                    </form>\r\n                </div>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\nexport default StudentApplication\r\n","C:\\Users\\Emmett\\Documents\\gb_final\\Gaiderbytes\\src\\pages\\ServerError.js",[],[],"C:\\Users\\Emmett\\Documents\\gb_final\\Gaiderbytes\\src\\pages\\CoachApplication.js",["296","297"],[],"import React,{useState} from \"react\";\r\nimport { string, z} from \"zod\";\r\nimport {useController, useForm} from \"react-hook-form\";\r\nimport {zodResolver} from \"@hookform/resolvers/zod\";\r\nimport Select from \"react-select\";\r\nimport {FormControlLabel, Radio, RadioGroup} from \"@mui/material\";\r\n\r\n\r\nconst CoachApplication = ({onSave}) => {\r\n    const [checked, setChecked] = useState(null);\r\n    const [expChecked, setExpChecked] = useState(false);\r\n    const [expOtherChecked, setExpOtherChecked] = useState(false);\r\n    const [resumeFile, setResumeFile] = useState(null);\r\n\r\n\r\n    const provinces = [\r\n        {value: \"alberta\", label: \"Alberta\"},\r\n        {value: \"british columbia\", label: \"British Columbia\"},\r\n        {value: \"manitoba\", label: \"Manitoba\"},\r\n        {value: \"new brunswick\", label: \"New Brunswick\"},\r\n        {value: \"newfoundland and labrador\", label: \"Newfoundland and Labrador\"},\r\n        {value: \"northwest territories\", label: \"Northwest Territories\"},\r\n        {value: \"nova scotia\", label: \"Nova Scotia\"},\r\n        {value: \"nunavut\", label: \"Nunavut\"},\r\n        {value: \"ontario\", label: \"Ontario\"},\r\n        {value: \"prince edward island\", label: \"Prince Edward Island\"},\r\n        {value: \"quebec\", label: \"Quebec\"},\r\n        {value: \"saskatchewan\", label: \"Saskatchewan\"},\r\n        {value: \"yukon\", label: \"Yukon\"},\r\n    ];\r\n\r\n    //outlining requirements for input (validation)\r\n    const schema = z.object({\r\n        first_name: z.string().regex(/^[A-Za-z]+$/).min(2).max(20),\r\n        last_name: z.string().regex(/^[A-Za-z]+$/).min(2).max(20),\r\n        email: string().email(),\r\n        province: z.string(),\r\n        city: string().regex(/^[A-Za-z]+$/).min(2).max(40),\r\n        address: string().min(5),\r\n        postal_code: string().length(6),\r\n        date_of_birth: string(),\r\n        pronoun: z.string().min(1),\r\n        years_of_experience: z.string().default(\"0\"),\r\n        resume_url: z.any().nullable(),\r\n        self_identification: z.string(),\r\n        gen_status: z.string(),\r\n        languages: z.string(),\r\n        institutions: z.string(),\r\n        availability: z.string(),\r\n        introduction: z.string(),\r\n        reside_in_canada: z.boolean(),\r\n        post_secondary_exp: z.string().min(1),\r\n        post_secondary_program: z.string()\r\n    });\r\n\r\n    const {register, handleSubmit, formState, control} = useForm({resolver: zodResolver(schema)});\r\n\r\n    const {errors} = formState;\r\n\r\n    const {field: field} = useController({name: 'province', control});\r\n    const {field: field1} = useController({name: 'pronoun', control});\r\n    const {field: genStatusInput} = useController({name: 'gen_status', control});\r\n    const {field: yearsOfExp} = useController({name: 'years_of_experience', control});\r\n    const {field: postSecondaryExp} = useController({name: 'post_secondary_exp', control});\r\n    const {field: selfIdentification} = useController({name: 'self_identification', control});\r\n    const {field: resideInCanada} = useController({name: 'reside_in_canada', control});\r\n    \r\n    const handleFileChange = (e) => {\r\n        setResumeFile(e.target.files[0]);\r\n      };\r\n\r\n    const handleProvinceSelectChange = (option) => {\r\n        field.onChange(option.value)\r\n    }\r\n\r\n    const handlePronounSelectChange = (option) => {\r\n        field1.onChange(option.target.value)\r\n    }\r\n    const handleGenStatusSelectChange = (option) => {\r\n        genStatusInput.onChange(option.target.value)\r\n    }\r\n    const handleYearsOfExpSelectChange = (option) => {\r\n        yearsOfExp.onChange(option.target.value)\r\n    }\r\n    const handlePostSecondaryExpSelectChange = (option) => {\r\n        postSecondaryExp.onChange(option.target.value)\r\n    }\r\n    const handleIdentificationSelectChange = (option) => {\r\n        selfIdentification.onChange(option.target.value)\r\n    }\r\n    const handleResidencySelectChange = (option) => {\r\n        let result;\r\n        if (option.target.value && typeof option.target.value === \"string\") {\r\n            if (option.target.value.toLowerCase() === \"true\") result = true;\r\n            if (option.target.value.toLowerCase() === \"false\") result = false;\r\n        }\r\n        resideInCanada.onChange(result)\r\n    }\r\n\r\n    //function to save form values\r\n    const handleSave = (formValues) => {\r\n        const formData = new FormData();\r\n        for (const key in formValues) {\r\n          formData.append(key, formValues[key]);\r\n        }\r\n        formData.append(\"resume\", document.querySelector('input[type=\"file\"]').files[0]);\r\n        onSave(formData);\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"m-2 shadow-lg bg-red-700 text-white rounded-md p-3\">\r\n                <h1 className=\"text-3xl\"> Coach Application Form</h1>\r\n                <p>Thank you for your interest. Please fill out the form below to apply to be a coach!.</p>\r\n            </div>\r\n            <div className=\"shadow-lg bg-slate-200 p-3 rounded-md m-2 coachApplicationForm\">\r\n                <form onSubmit={handleSubmit(handleSave)}>\r\n                    <div>\r\n                        <h1 className=\"text-xl\">Personal Information</h1>\r\n                        <label htmlFor=\"first_name\">First Name: </label>\r\n                        <input type=\"text\"\r\n                               className=\"rounded-md p-3 ml-5 w-50\"\r\n                               placeholder=\"Enter first name\"\r\n                               {...register(\"first_name\")}\r\n                        />\r\n                        <div style={{color: \"red\"}}>\r\n                            {errors.first_name?.message}\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"last_name\">Last Name:</label>\r\n                        <input type=\"text\"\r\n                               className=\"rounded-md p-3 m-1 ml-7 w-50\"\r\n                               placeholder=\"Enter last name\"\r\n                               {...register(\"last_name\")}\r\n                        />\r\n                        <div style={{color: \"red\"}}>\r\n                            {errors.last_name?.message}\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"email\">Email Address:</label>\r\n                        <input type=\"email\"\r\n                               className=\"p-3 m-1 w-50 rounded-md\"\r\n                               placeholder=\"name@example.com\"\r\n                               {...register(\"email\")}\r\n                        />\r\n                        <div style={{color: \"red\"}}>\r\n                            {errors.email?.message}\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <label>Do you reside in Canada?</label>\r\n                        <RadioGroup onChange={handleResidencySelectChange}>\r\n                            <div>\r\n                                <Radio value={true}></Radio>\r\n                                <label>Yes</label>\r\n                            </div>\r\n                            <div>\r\n                                <Radio value={false}></Radio>\r\n                                <label>No</label>\r\n                            </div>\r\n\r\n                        </RadioGroup>\r\n                        <div style={{color: \"red\"}}>\r\n                            {errors.reside_in_canada?.message}\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"province\">Province:</label>\r\n                        <Select className=\"m-1 w-60 rounded-md\"\r\n                                value ={provinces.find(({value}) => value ===field.value)}\r\n                                onChange={handleProvinceSelectChange}\r\n                                options={provinces}\r\n                        />\r\n                        <div style={{color: \"red\"}}>\r\n                            {errors.province?.message}\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"city\">City:</label>\r\n                        <input type=\"text\"\r\n                               className=\"p-3 m-1 ml-20 w-60 rounded-md\"\r\n                               placeholder=\"City\"\r\n                               {...register(\"city\")}\r\n                        />\r\n                        <div style={{color: \"red\"}}>\r\n                            {errors.city?.message}\r\n                        </div>\r\n                    </div>\r\n                    <label htmlFor=\"address\">Street Address:</label>\r\n                    <input type=\"text\"\r\n                           className=\"p-3 m-1 w-60 rounded-md\"\r\n                           placeholder=\"123 street name\"\r\n                           {...register(\"address\")}\r\n                    />\r\n                    <div style={{color: \"red\"}}>\r\n                        {errors.address?.message}\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"postal_code\">Postal Code:</label>\r\n                        <input type=\"text\"\r\n                               className=\"p-3 m-1 ml-5 w-60 rounded-md\"\r\n                               placeholder=\"A4B1A1\"\r\n                               {...register(\"postal_code\")}\r\n                        />\r\n                        <div style={{color: \"red\"}}>\r\n                            {errors.postal_code?.message}\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"date_of_birth\">Date of Birth:</label>\r\n                        <input type=\"date\"\r\n                               className=\"p-3 m-1 ml-4 w-60 rounded-md\"\r\n                               {...register(\"date_of_birth\")}\r\n                        />\r\n                        <div style={{color: \"red\"}}>\r\n                            {errors.date_of_birth?.message}\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <RadioGroup onChange={handlePronounSelectChange}>\r\n                            <label>Pronouns:</label>\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Radio\r\n                                        value={\"he/him\"}\r\n                                        onClick={() => setChecked(false)}\r\n                                    />\r\n                                }\r\n                                label={\"He/Him\"}/>\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Radio\r\n                                        value={\"she/her\"}\r\n                                        onClick={() => setChecked(false)}\r\n                                    />} label={\"She/Her\"}/>\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Radio\r\n\r\n                                        onClick={() => setChecked(true)}\r\n                                        value=\"\"\r\n                                        label=\"other\"\r\n                                    />\r\n                                }\r\n                                label={\r\n                                    checked ? (\r\n                                        <input\r\n                                            disabled={!checked}\r\n\r\n                                            className=\"p-3 m-1 w-60 rounded-md\"\r\n                                            placeholder=\"Enter Pronoun\"\r\n                                            onChange={handlePronounSelectChange}\r\n                                        />\r\n                                    ) : (\r\n                                        \"Other\"\r\n                                    )\r\n                                }\r\n                            />\r\n                        </RadioGroup>\r\n                        <div style={{color: \"red\"}}>\r\n                            {errors.pronoun?.message}\r\n                        </div>\r\n                        <div>\r\n                            <label>Do you self identify as:</label>\r\n                            <RadioGroup onChange={handleIdentificationSelectChange}>\r\n                                <div>\r\n                                    <Radio value={\"black\"}></Radio>\r\n                                    <label>Black</label>\r\n                                </div>\r\n                                <div>\r\n                                    <Radio value={\"indigenous\"}></Radio>\r\n                                    <label>Indigenous</label>\r\n                                </div>\r\n                                <div>\r\n                                    <Radio value={\"person of colour\"}></Radio>\r\n                                    <label>Person of Colour</label>\r\n                                </div>\r\n                                <div>\r\n                                    <Radio value={\"none of the above\"}></Radio>\r\n                                    <label>None of the above</label>\r\n                                </div>\r\n                            </RadioGroup>\r\n                            <div style={{color: \"red\"}}>\r\n                                {errors.self_identification?.message}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <h1 className=\"text-xl\">Post-Secondary Experience</h1>\r\n                    <div>\r\n                        <label>Post-secondary institution(s) attended:</label>\r\n                        <input type=\"text\"\r\n                               className=\"p-3 m-1 ml-4 w-60 rounded-md\"\r\n                               {...register(\"institutions\")}\r\n                        />\r\n                        <div style={{color: \"red\"}}>\r\n                            {errors.institutions?.message}\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <label>Name of the program you attended:</label>\r\n                        <input type=\"text\"\r\n                               className=\"p-3 m-1 ml-4 w-60 rounded-md\"\r\n                               {...register(\"post_secondary_program\")}\r\n                        />\r\n                        <div style={{color: \"red\"}}>\r\n                            {errors.post_secondary_program?.message}\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <label>Have you ever worked at a publicly-funded post-secondary institution:</label>\r\n                            <RadioGroup onChange={handlePostSecondaryExpSelectChange}>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                    <Radio\r\n                                        onClick={() => {\r\n                                            setExpChecked(true);\r\n                                            setExpOtherChecked(false);\r\n                                        }}\r\n                                        value=\"yes\"\r\n                                        label=\"other\"\r\n                                    />\r\n\r\n                                    }\r\n                                    label={\r\n                                        expChecked ? (\r\n                                            <input\r\n                                                type=\"number\"\r\n                                                className=\"p-3 m-1 w-60 rounded-md\"\r\n                                                placeholder=\"Years of experience\"\r\n                                                onChange={handleYearsOfExpSelectChange}/>\r\n                                        ) : (\"Yes\")\r\n                                    }\r\n                                    />\r\n                                <div style={{color: \"red\"}}>\r\n                                    {errors.years_of_experience?.message}\r\n                                </div>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Radio\r\n                                            onClick={() => {\r\n                                                setExpChecked(false);\r\n                                                setExpOtherChecked(false);\r\n                                            }}\r\n                                            value=\"No\"\r\n                                        />\r\n                                    }\r\n                                    label={\"No\"}/>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                        <Radio\r\n                                            onClick={() => {\r\n                                                setExpChecked(false);\r\n                                                setExpOtherChecked(true);\r\n                                            }}\r\n                                            value=\"\"\r\n                                            label=\"other\"\r\n                                        />\r\n                                    }\r\n                                    label={\r\n                                          expOtherChecked ?(\r\n                                            <input\r\n                                                className=\"p-3 m-1 w-60 rounded-md\"\r\n                                                placeholder=\"Please Specify\"\r\n                                                onChange={handlePostSecondaryExpSelectChange}\r\n                                            />\r\n                                        ): (\"Other\")\r\n                                    }/>\r\n                            </RadioGroup>\r\n                        <div style={{color: \"red\"}}>\r\n                            {errors.post_secondary_exp?.message}\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <label>Resume:</label>\r\n                            <input\r\n                                type=\"file\"\r\n                                className=\"p-3 m-1 ml-4 w-60 rounded-md\"\r\n                                accept={\".pdf, .docx, .doc\"}\r\n                                onChange={handleFileChange}\r\n                            />\r\n                        <div style={{ color: \"red\" }}>\r\n                            {errors.resume_url?.message}\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <label>Were you:</label>\r\n                        <RadioGroup onChange={handleGenStatusSelectChange}>\r\n                            <div>\r\n                                <Radio value={\"first member of my family\"}></Radio>\r\n                                <label>The first person in your family to attend post-secondary education in Canada</label>\r\n                            </div>\r\n                            <div>\r\n                                <Radio value={\"first generation of my family\"}></Radio>\r\n                                <label>The first generation of your family to attend post-secondary education in Canada</label>\r\n                            </div>\r\n                            <div>\r\n                                <Radio value={\"Neither\"}></Radio>\r\n                                <label>Neither</label>\r\n                            </div>\r\n                        </RadioGroup>\r\n                        <div style={{color: \"red\"}}>\r\n                            {errors.gen_status?.message}\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <label>Languages spoken:</label>\r\n                        <input type=\"text\"\r\n                               className=\"p-3 m-1 ml-4 w-60 rounded-md\"\r\n                               {...register(\"languages\")}\r\n                        />\r\n                        <div style={{color: \"red\"}}>\r\n                            {errors.languages?.message}\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <label>Availability:</label>\r\n                        <input type=\"text\"\r\n                               className=\"p-3 m-1 ml-4 w-60 rounded-md\"\r\n                               {...register(\"availability\")}\r\n                        />\r\n                        <div style={{color: \"red\"}}>\r\n                            {errors.availability?.message}\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <label>Why do you think you would be a great CHEC Coach?</label>\r\n                        <input type=\"text\"\r\n                               className=\"p-3 m-1 ml-4 w-60 rounded-md\"\r\n                               {...register(\"introduction\")}\r\n                        />\r\n                        <div style={{color: \"red\"}}>\r\n                            {errors.introduction?.message}\r\n                        </div>\r\n                    </div>\r\n                    <button className=\"bg-red-400 p-3 rounded-md hover:bg-red-200 m-2 ml-2\" type=\"submit\">Apply</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default CoachApplication","C:\\Users\\Emmett\\Documents\\gb_final\\Gaiderbytes\\src\\pages\\ApplicationSuccess.js",[],[],"C:\\Users\\Emmett\\Documents\\gb_final\\Gaiderbytes\\src\\pages\\Home.js",["298"],[],"import React from 'react'\r\nimport PageBubble from './../components/page_bubble/page_bubble';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div className='min-h-full items-center'>\r\n            <div>\r\n                <PageBubble\r\n                    title=\"Need Help In Your First Year Post-Secondary?\"\r\n                    description=\"Apply Now To Be Matched With a Coach!\"\r\n                    buttonTitle=\"Apply Now!\"\r\n                    navigateUrl=\"/student-application\"\r\n                />\r\n            </div>\r\n            <div>\r\n                <footer className='bottom-0 left-1/2 cursor-pointer absolute underline' >\r\n                    <a onClick={()=>{window.location.pathname= \"/admin\"}}>\r\n                        Admin login\r\n                    </a>\r\n                </footer>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home","C:\\Users\\Emmett\\Documents\\gb_final\\Gaiderbytes\\src\\pages\\ApplicationFail.js",[],[],"C:\\Users\\Emmett\\Documents\\gb_final\\Gaiderbytes\\src\\pages\\AboutUs.js",["299","300"],[],"import React from \"react\";\r\nimport user_review_pic from \"../images/user_review_pic.svg\"\r\nfunction AboutUs (){\r\n    return(\r\n        <div>\r\n            <div className=\"m-2 shadow-lg h-auto bg-[#E2E8F0] text-black items-center rounded-[64px] p-3\">\r\n                <h1 className=\"text-3xl font-[800]\">About Us</h1>\r\n            </div>\r\n            <div className=\"flex flex-row\">\r\n                <div className=\"m-2 shrink w-3/4\">\r\n                    <h1 className=\"text-3xl font-bold\">Our Mission</h1>\r\n                    <p>The organization's mission statement will be in this section.</p>\r\n                </div>\r\n                <div className=\"m-2 shrink w-3/4\">\r\n                    <h1 className=\"text-3xl font-bold\">User Reviews</h1>\r\n                    <div className=\"bg-gray-300 rounded-md p-3 shadow-lg\">\r\n                        <div>\r\n                            <img src={user_review_pic} alt=\"User review picture\" className=\"w-16 p-1\"/>\r\n                        </div>\r\n                        <p>\"Canadian Higher-Ed Coaches made me more confortable with transitioning to post-secondary.\"</p>\r\n                        <p className=\"font-bold\">- Anon Name</p>\r\n                    </div>\r\n                    <br/>\r\n                    <div className=\"bg-gray-300 rounded-md p-3\">\r\n                        <div>\r\n                            <img src={user_review_pic} alt=\"User review picture\" className=\"w-16 p-1\"/>\r\n                        </div>\r\n                        <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\r\n                        <p className=\"font-bold\">- User Name</p>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n                <div className=\"flex flex-row\">\r\n                <div className=\"m-2 shrink w-3/4\">\r\n                    <h1 className=\"text-3xl font-bold\">Our Services</h1>\r\n                    <p>We offer 1 on 1 coaching to underserved first year post-secondary students in Canada.</p>\r\n                </div>\r\n                <div className=\"m-2 shrink w-3/4\">\r\n                    <h1 className=\"text-3xl font-bold\">Have any Questions?</h1>\r\n                    <p>If you have any questions or are interested in volunteering, please Contact us:</p>\r\n                    <p><strong>Address:</strong> 123 AnyStreet Road City, Prov., A0X1X2 <br/> <strong>Email Nancy Van Dorp: </strong>nancy@cdnhecoaches.org\r\n                        <br/><strong>Phone:</strong> 416-801-0135\r\n                    </p>\r\n                    <h2 className=\"text-xl\">Or visit our FAQs</h2>\r\n                    <button className=\"bg-[#E2E8F0] p-3 rounded-md hover:bg-[#34345c] hover:text-white border border-black transition-colors duration-300\">FAQS</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default AboutUs;","C:\\Users\\Emmett\\Documents\\gb_final\\Gaiderbytes\\src\\pages\\CoachesPage.js",[],[],"C:\\Users\\Emmett\\Documents\\gb_final\\Gaiderbytes\\src\\pages\\Eligible.js",[],[],"C:\\Users\\Emmett\\Documents\\gb_final\\Gaiderbytes\\src\\pages\\EligibilityCheck.js",["301","302","303"],[],"import {FormControlLabel, Radio, RadioGroup} from \"@mui/material\";\r\nimport React from \"react\";\r\nimport {useController, useForm} from \"react-hook-form\";\r\nimport {zodResolver} from \"@hookform/resolvers/zod\";\r\nimport {string, z} from \"zod\";\r\n\r\n\r\nconst EligibilityCheck = ({}) => {\r\n\r\n    const schema = z.object({\r\n        residency: z.string().min(1),\r\n        poc_status: z.string().min(1),\r\n        first_generation: z.string().min(1),\r\n        acceptance: z.string().min(1),\r\n    });\r\n\r\n\r\n    const {register, handleSubmit, formState, control} = useForm({resolver: zodResolver(schema)});\r\n\r\n    const {errors} = formState;\r\n\r\n    const {field: residency} = useController({name: 'residency', control});\r\n    const {field: poc} = useController({name: 'poc_status', control});\r\n    const {field: first_generation} = useController({name: 'first_generation', control});\r\n    const {field: accepted} = useController({name: 'acceptance', control});\r\n\r\n    const handleResidencySelectChange = (option) => {\r\n        residency.onChange(option.target.value)\r\n    }\r\n    const handlePocSelectChange = (option) => {\r\n        poc.onChange(option.target.value)\r\n    }\r\n    const handleGenerationSelectChange = (option) => {\r\n        first_generation.onChange(option.target.value)\r\n    }\r\n    const handleAcceptanceSelectChange = (option) => {\r\n        accepted.onChange(option.target.value)\r\n    }\r\n\r\n    const checkEligibility = (formValues) => {\r\n        const formData = new FormData();\r\n        for (const key in formValues){\r\n            formData.append(key,formValues[key]);\r\n        }\r\n        console.log(formData)\r\n        console.log(residency.value)\r\n        if (residency.value ===\"yes\" && (poc.value === \"yes\" || first_generation.value ===\"yes\") && accepted.value ===\"yes\"){\r\n            console.log(\"Working\")\r\n            window.location.pathname = \"/eligible\";\r\n        }else{\r\n            console.log(\"not working\")\r\n            window.location.pathname = \"/ineligible\";\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"m-2 shadow-lg bg-red-700 text-white rounded-md p-3\">\r\n                <h1 className=\"text-3xl\"> Student Eligibility Check</h1>\r\n                <p>Thank you for your interest. Please fill out the form below to check your eligibility for our program!.</p>\r\n            </div>\r\n            <div className=\"shadow-lg bg-slate-200 p-3 rounded-md m-2\">\r\n                <form onSubmit={handleSubmit(checkEligibility)}>\r\n                    <div>\r\n                        <RadioGroup onChange={handleResidencySelectChange}>\r\n                            <label className=\"text-xl\">Are you a Canadian resident or will you be by the start of your program?</label>\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Radio\r\n                                        value={\"yes\"}\r\n                                    />\r\n                                }\r\n                                label={\"Yes\"}/>\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Radio\r\n                                        value={\"no\"}\r\n                                    />} label={\"No\"}\r\n                            />\r\n                        </RadioGroup>\r\n                        <div style={{color: \"red\"}}>\r\n                            {errors.residency?.message}\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <RadioGroup onChange={handlePocSelectChange}>\r\n                            <label className=\"text-xl\">Do you self-identify as Black, Indigenous, or as a Person of Colour?</label>\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Radio\r\n                                        value={\"yes\"}\r\n                                    />\r\n                                }\r\n                                label={\"Yes\"}/>\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Radio\r\n                                        value={\"no\"}\r\n                                    />} label={\"No\"}\r\n                            />\r\n                        </RadioGroup>\r\n                        <div style={{color: \"red\"}}>\r\n                            {errors.poc_status?.message}\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <RadioGroup onChange={handleGenerationSelectChange}>\r\n                            <label className=\"text-xl\">Do self-identify as the first in your family to attend post-secondary studies, or part of the first generation of your family to attend post-secondary studies in Canada?</label>\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Radio\r\n                                        value={\"yes\"}\r\n                                    />\r\n                                }\r\n                                label={\"Yes\"}/>\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Radio\r\n                                        value={\"no\"}\r\n                                    />} label={\"No\"}\r\n                            />\r\n                        </RadioGroup>\r\n                        <div style={{color: \"red\"}}>\r\n                            {errors.first_generation?.message}\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <RadioGroup onChange={handleAcceptanceSelectChange}>\r\n                            <label className=\"text-xl\">Have you been accepted into a program at a publicly-funded post-secondary institution, and are entering your first year of study? </label>\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Radio\r\n                                        value={\"yes\"}\r\n                                    />\r\n                                }\r\n                                label={\"Yes\"}/>\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <Radio\r\n                                        value={\"no\"}\r\n                                    />} label={\"No\"}\r\n                            />\r\n                        </RadioGroup>\r\n                        <div style={{color: \"red\"}}>\r\n                            {errors.acceptance?.message}\r\n                        </div>\r\n                    </div>\r\n                    <button className=\"bg-red-400 p-3 rounded-md hover:bg-red-200 m-2 ml-2\" type=\"submit\">Check Eligibility</button>\r\n                </form>\r\n\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default EligibilityCheck","C:\\Users\\Emmett\\Documents\\gb_final\\Gaiderbytes\\src\\pages\\Ineligible.js",[],[],"C:\\Users\\Emmett\\Documents\\gb_final\\Gaiderbytes\\src\\pages\\StudentsPage.js",[],[],"C:\\Users\\Emmett\\Documents\\gb_final\\Gaiderbytes\\src\\pages\\AdminUnauthorized.js",[],[],"C:\\Users\\Emmett\\Documents\\gb_final\\Gaiderbytes\\src\\pages\\AdminLogin.js",["304","305","306","307","308"],[],"import React from \"react\";\r\nimport {FormControlLabel, Radio, RadioGroup} from \"@mui/material\";\r\nimport {z} from \"zod\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {zodResolver} from \"@hookform/resolvers/zod\";\r\nimport {object} from \"zod\";\r\n\r\n\r\nconst AdminLogin = ({onSave}) => {\r\n\r\n    const schema = z.object({\r\n        username: z.string().min(3),\r\n        password: z.string().min(5),\r\n    });\r\n\r\n\r\n    const {register, handleSubmit, formState, control} = useForm({resolver: zodResolver(schema)});\r\n\r\n    const {errors} = formState;\r\n\r\n    const login = (formValues) => {\r\n        onSave(formValues)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"shadow-lg bg-slate-200 p-3 rounded-md m-2 flex flex-col items-center\">\r\n                <h1 className=\"text-3xl items-center\">Admin Login</h1>\r\n                <form onSubmit={handleSubmit(login)} className='p-3 flex flex-col items-center'>\r\n                    <div>\r\n                        <label htmlFor=\"username\">Username: </label>\r\n                        <input type=\"text\" className=\"rounded-md p-3 ml-5 mb-5 w-50 \" placeholder=\"Username\"\r\n                               {...register(\"username\")}\r\n                        />\r\n                        <div style={{color: \"red\"}}>\r\n                            {errors.username?.message}\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"password\">Password: </label>\r\n                        <input type=\"password\" className=\"rounded-md p-3 ml-6 w-50\" placeholder=\"Password\"\r\n                               {...register(\"password\")}\r\n                        />\r\n                        <div style={{color: \"red\"}}>\r\n                            {errors.first_name?.message}\r\n                        </div>\r\n                    </div>\r\n                    <button className=\"bg-red-400 p-3 rounded-md hover:bg-red-200 m-2 ml-2\" type=\"submit\">Sign In</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default AdminLogin;\r\n","C:\\Users\\Emmett\\Documents\\gb_final\\Gaiderbytes\\src\\pages\\AdminCoach.js",[],[],"C:\\Users\\Emmett\\Documents\\gb_final\\Gaiderbytes\\src\\pages\\MatchSuccess.js",[],[],"C:\\Users\\Emmett\\Documents\\gb_final\\Gaiderbytes\\src\\pages\\AdminStudent.js",[],[],"C:\\Users\\Emmett\\Documents\\gb_final\\Gaiderbytes\\src\\pages\\MatchingPage.js",["309"],[],"import React, {useEffect} from 'react';\r\nimport {useState} from \"react\";\r\n\r\nconst MatchingPage = ({createMatch}) => {\r\n\r\n    const [selectedStudent, setSelectedStudent] = useState(\"Please Select\");\r\n    const [selectedCoach, setSelectedCoach] = useState(\"Please Select\");\r\n    const [coaches, setCoaches] = useState([]);\r\n    const [students, setStudents] = useState([]);\r\n    const [paramTypeC, setParamTypeC] = useState(\"Name\");\r\n    const [paramC, setParamC] = useState(\"\");\r\n    const [paramTypeS, setParamTypeS] = useState(\"Name\");\r\n    const [paramS, setParamS] = useState(\"\");\r\n    const [canMatch, setCanMatch] = useState(true)\r\n\r\n    useEffect(() => {\r\n        const fetchCoachData = async () => {\r\n            let apiUrl = \"\"\r\n            try {\r\n                if(paramTypeC === \"ID\"){\r\n                    apiUrl = `http://localhost:5000/admin/available_coaches/${paramC}`\r\n                }\r\n                else if(paramTypeC === \"Name\"){\r\n                    // const parts = param.split(' ');\r\n                    // const first_name = parts[0];\r\n                    // const last_name = parts[1];\r\n                    apiUrl = `http://localhost:5000/admin/available_coaches?searchParam=${paramTypeC.toLowerCase()}&value=${paramC}`\r\n                }\r\n                else{\r\n                    apiUrl = (`http://localhost:5000/admin/available_coaches?searchParam=${paramTypeC.toLowerCase()}&value=${paramC}`);\r\n                }\r\n                const response = await fetch(apiUrl)\r\n                if (!response.ok) {\r\n                    throw new Error(\"Failed to fetch coaches data.\");\r\n                }\r\n                const data = await response.json();\r\n                setCoaches(data);\r\n            } catch (error) {\r\n                console.error(\"Error fetching coaches data:\", error);\r\n            }\r\n        };\r\n        fetchCoachData();\r\n    }, [paramTypeC, paramC]);\r\n\r\n    useEffect(() => {\r\n        const fetchStudentData = async () => {\r\n            let apiUrl = \"\"\r\n            try {\r\n                if(paramTypeS === \"ID\"){\r\n                    apiUrl = `http://localhost:5000/admin/unmatched_students/${paramS}`\r\n                }\r\n                else if(paramTypeS === \"Name\"){\r\n                    // const parts = param.split(' ');\r\n                    // const first_name = parts[0];\r\n                    // const last_name = parts[1];\r\n                    apiUrl = `http://localhost:5000/admin/unmatched_students?searchParam=${paramTypeS.toLowerCase()}&value=${paramS}`\r\n                }\r\n                else{\r\n                    apiUrl = (`http://localhost:5000/admin/unmatched_students?searchParam=${paramTypeS.toLowerCase()}&value=${paramS}`);\r\n                }\r\n                const response = await fetch(apiUrl)\r\n                if (!response.ok) {\r\n                    throw new Error(\"Failed to fetch Students data.\");\r\n                }\r\n                const data = await response.json();\r\n                setStudents(data);\r\n            } catch (error) {\r\n                console.error(\"Error fetching Students data:\", error);\r\n            }\r\n        };\r\n        fetchStudentData();\r\n    }, [paramTypeS, paramS]);\r\n\r\n    const handleParamTypeChangeCoach = (e) => {\r\n        setParamTypeC(e.target.value);\r\n    };\r\n\r\n    const handleParamChangeCoach = (e) => {\r\n        setParamC(e.target.value);\r\n    };\r\n    const handleParamTypeChangeStudent = (e) => {\r\n        setParamTypeS(e.target.value);\r\n    };\r\n\r\n    const handleParamChangeStudent = (e) => {\r\n        setParamS(e.target.value);\r\n    };\r\n\r\n    const setCoachSelection = (index) => {\r\n        setSelectedCoach(coaches[index])\r\n        checkCanMatch()\r\n\r\n    }\r\n    const setStudentSelection = (index) => {\r\n        setSelectedStudent(students[index])\r\n        checkCanMatch()\r\n    }\r\n    const checkCanMatch = () => {\r\n        if (selectedStudent && selectedCoach !== \"Please Select\") {\r\n            setCanMatch(false)\r\n        }\r\n    }\r\n    const match = () => {\r\n        let student = selectedStudent.id\r\n        let coach = selectedCoach.id\r\n        let obj = new Object()\r\n        obj.studentId = \"\"+student+\"\";\r\n        obj.coachId = \"\"+coach+\"\";\r\n        console.log(JSON.stringify(obj))\r\n        createMatch(JSON.stringify(obj))\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"\">\r\n            <div className=\"shadow-lg bg-slate-200 p-3 rounded-md m-auto mt-5 w-fit align-middle\">\r\n                <div className=\"flex items-center\">\r\n                    <div className=\"flex-col\">\r\n                        <h2 className=\"font-[700] text-[36px] leading-22\">Matching</h2>\r\n                        <p>Please select 1 student and 1 coach</p>\r\n                    </div>\r\n                    <div className=\"flex items-center m-5\">\r\n                        <label className=\"font-bold\">Student:</label>\r\n                        <div className=\"p-2 bg-white rounded-md items-center h-fit\">\r\n                            <p className=\"text-xl\">{selectedStudent.first_name || selectedStudent}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"flex items-center m-5\">\r\n                        <label className=\"font-bold\">Coach:</label>\r\n                        <div className=\"p-2 bg-white rounded-md items-center h-fit\">\r\n                            <p className=\"text-xl\">{selectedCoach.first_name || selectedCoach}</p>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <button className=\"bg-red-400 p-3 rounded-md hover:bg-red-200 m-2 ml-2 disabled:bg-gray-500 disabled:hover:bg-gray-500 matchButton\" disabled={canMatch} onClick={match}>Match</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"flex justify-between items-center\">\r\n                <h2 className=\"font-[700] text-[36px] leading-22\">Coach Applicants</h2>\r\n                <div className=\"ml-4 flex space-x-2\">\r\n                    <select\r\n                        className=\"px-2 py-2 border rounded-md bg-white\"\r\n                        value={paramTypeC}\r\n                        onChange={handleParamTypeChangeCoach}\r\n                    >\r\n                        <option value=\"Name\">Name</option>\r\n                        <option value=\"ID\">ID</option>\r\n                        <option value=\"Email\">Email</option>\r\n                    </select>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder={`Enter ${paramTypeC.toLowerCase()}...`}\r\n                        className=\"px-4 py-2 border rounded-md\"\r\n                        value={paramC}\r\n                        onChange={handleParamChangeCoach}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"mt-[12px]\">\r\n                <div className=\"min-w-full overflow-hidden overflow-x-auto\">\r\n                    <table className=\"min-w-max w-full table-auto\">\r\n                        <thead>\r\n                        <tr className=\"bg-[#E2E8F0] text-black uppercase text-sm leading-normal\">\r\n                            <th className=\"py-2 px-6 text-left\">Applicant's Name</th>\r\n                            <th className=\"py-2 px-6 text-left\">Email</th>\r\n                            <th className=\"py-2 px-6 text-left\">Matching</th>\r\n                            <th className=\"py-2 px-6 text-left\">Action</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody className=\"text-black text-sm font-light\">\r\n                        {coaches.map((coach, index) => (\r\n                            <tr key={index} className=\"border-b border-gray-200 hover:bg-gray-100\">\r\n                                <td className=\"py-2 px-6 text-left whitespace-nowrap\">\r\n                                    {coach.first_name + ' ' + coach.last_name}\r\n                                </td>\r\n                                <td className=\"py-2 px-6 text-left\">\r\n                                    {coach.email}\r\n                                </td>\r\n                                <td className=\"py-2 px-6 text-left\">\r\n                                    <button className=\"bg-[#E2E8F0] text-black px-4 py-2 border rounded-md hover:bg-[#34345c] hover:text-white focus:outline-none focus:border-blue-900 focus:ring ring-blue-200 active:bg-blue-800\" onClick={() => setCoachSelection(index)}>Select</button>\r\n                                </td>\r\n                                <td className=\"py-2 px-6 text-left\">\r\n                                    <button className=\"bg-[#E2E8F0] text-black px-4 py-2 border rounded-md hover:bg-[#34345c] hover:text-white focus:outline-none focus:border-blue-900 focus:ring ring-blue-200 active:bg-blue-800\">View Detail</button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            <div className=\"flex justify-between items-center\">\r\n                <h2 className=\"font-[700] text-[36px] leading-22\">Student Applicants</h2>\r\n                <div className=\"ml-4 flex space-x-2\">\r\n                    <select\r\n                        className=\"px-2 py-2 border rounded-md bg-white\"\r\n                        value={paramTypeS}\r\n                        onChange={handleParamTypeChangeStudent}\r\n                    >\r\n                        <option value=\"Name\">Name</option>\r\n                        <option value=\"ID\">ID</option>\r\n                        <option value=\"Email\">Email</option>\r\n                    </select>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder={`Enter ${paramTypeS.toLowerCase()}...`}\r\n                        className=\"px-4 py-2 border rounded-md\"\r\n                        value={paramS}\r\n                        onChange={handleParamChangeStudent}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"mt-[12px]\">\r\n                <div className=\"min-w-full overflow-hidden overflow-x-auto\">\r\n                    <table className=\"min-w-max w-full table-auto\">\r\n                        <thead>\r\n                        <tr className=\"bg-[#E2E8F0] text-black uppercase text-sm leading-normal\">\r\n                            <th className=\"py-2 px-6 text-left\">Applicant's Name</th>\r\n                            <th className=\"py-2 px-6 text-left\">Email</th>\r\n                            <th className=\"py-2 px-6 text-left\">Status</th>\r\n                            <th className=\"py-2 px-6 text-left\">Matching</th>\r\n                            <th className=\"py-2 px-6 text-left\">Action</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody className=\"text-black text-sm font-light\">\r\n                        {students.map((student, index) => (\r\n                            <tr key={index} className=\"border-b border-gray-200 hover:bg-gray-100\">\r\n                                <td className=\"py-2 px-6 text-left whitespace-nowrap\">\r\n                                    {student.first_name + ' ' + student.last_name}\r\n                                </td>\r\n                                <td className=\"py-2 px-6 text-left\">\r\n                                    {student.email}\r\n                                </td>\r\n                                <td className=\"py-2 px-6 text-left\">\r\n                                    {student.status}\r\n                                </td>\r\n                                <td className=\"py-2 px-6 text-left\">\r\n                                    <button className=\"bg-[#E2E8F0] text-black px-4 py-2 border rounded-md hover:bg-[#34345c] hover:text-white focus:outline-none focus:border-blue-900 focus:ring ring-blue-200 active:bg-blue-800\" onClick={() => setStudentSelection(index)}>Select</button>\r\n                                </td>\r\n                                <td className=\"py-2 px-6 text-left\">\r\n                                    <button className=\"bg-[#E2E8F0] text-black px-4 py-2 border rounded-md hover:bg-[#34345c] hover:text-white focus:outline-none focus:border-blue-900 focus:ring ring-blue-200 active:bg-blue-800\">View Detail</button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default MatchingPage;\r\n","C:\\Users\\Emmett\\Documents\\gb_final\\Gaiderbytes\\src\\pages\\CoachMax.js",[],[],"C:\\Users\\Emmett\\Documents\\gb_final\\Gaiderbytes\\src\\pages\\StudentMatchedAlready.js",[],[],"C:\\Users\\Emmett\\Documents\\gb_final\\Gaiderbytes\\src\\pages\\statusCheck\\StatusCheck.js",["310"],[],"import React from 'react'\r\nimport { useState, useEffect } from \"react\";\r\nimport './statusCheck.css'\r\nimport checkIcon from './../../images/icons/check.svg'\r\n\r\n\r\nconst StatusCheck = () => {\r\n\r\n    const [userType, setUserType] = useState(1);\r\n    const [email, setEmail] = useState('');\r\n\r\n    const handleUserType = (type) => {\r\n        setUserType(type);\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        console.log(`Email: ${email}, User Type: ${userType}`);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className='w-full h-auto bg-[#E2E8F0] mt-[64px] flex flex-col items-center rounded-[64px]'>\r\n                <h1 className=\"font-[800] text-[40px] leading-[150%] pt-[32px]\">Already Have an Account?</h1>\r\n                <h2 className=\"pt-[32px] font-[700] text-[25px]\">Check Your Match Status Here By Entering your Email and Account Type!</h2>\r\n                <form className=\"pb-[32px] w-[450px] flex flex-col items-center\" onSubmit={handleSubmit}>\r\n                    <input className=\"h-[45px] w-full rounded-[6px] mt-[32px] px-[14px]\" type=\"email\" placeholder=\"Enter your email\" value={email} onChange={(event)=>{setEmail(event.target.value)}}></input>\r\n                    <input className=\"hidden\" id=\"user_type_input\" value={userType}></input>\r\n                    <p className=\"text-start w-full py-[16px] font-[600] text-[16px] leading-[21.79px]\">I am a...</p>\r\n                    <div className=\"flex flex-row gap-[16px]\">\r\n                        <div className=\"w-full flex flex-row justify-center items-center w-[217px] px-[16px] py-[8px] font-[600] text-[24px] border border-black rounded-[4px] hover:border-[#34345c] hover:text-white hover:bg-[#34345c] transition-colors cursor-pointer text-center\" onClick={()=>handleUserType(1)} id=\"student-button\">\r\n                            Student\r\n                            {userType === 1 && <img src={checkIcon} className=\"ml-[8px]\" alt=\"check icon\"></img>}\r\n                        </div>\r\n                        <div className=\"flex flex-row justify-center items-center w-[217px] px-[16px] py-[8px] font-[600] text-[24px] border border-black rounded-[4px] hover:border-[#34345c] hover:text-white hover:bg-[#34345c] transition-colors  cursor-pointer text-center\" onClick={()=>handleUserType(2)} id=\"coach-button\">\r\n                            Coach\r\n                            {userType === 2 && <img src={checkIcon} className=\"ml-[8px]\" alt=\"check icon\"></img>}\r\n                        </div>\r\n                    </div>\r\n                    <button className=\"mt-[32px] rounded-[4px] py-[8px] px-[16px] bg-red-400 hover:bg-red-200\" type=\"submit\">Submit</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StatusCheck","C:\\Users\\Emmett\\Documents\\gb_final\\Gaiderbytes\\src\\components\\navbar\\Navbar.js",[],[],"C:\\Users\\Emmett\\Documents\\gb_final\\Gaiderbytes\\src\\components\\adminNavbar\\adminNavbar.js",[],[],"C:\\Users\\Emmett\\Documents\\gb_final\\Gaiderbytes\\src\\components\\page_bubble\\page_bubble.js",[],[],"C:\\Users\\Emmett\\Documents\\gb_final\\Gaiderbytes\\src\\components\\cateogry_box\\category_box.js",[],[],"C:\\Users\\Emmett\\Documents\\GitHub\\prod_build\\src\\index.js",[],[],"C:\\Users\\Emmett\\Documents\\GitHub\\prod_build\\src\\App.js",["311"],[],"C:\\Users\\Emmett\\Documents\\GitHub\\prod_build\\src\\reportWebVitals.js",[],[],"C:\\Users\\Emmett\\Documents\\GitHub\\prod_build\\src\\pages\\ApplicationSuccess.js",[],[],"C:\\Users\\Emmett\\Documents\\GitHub\\prod_build\\src\\pages\\ApplicationFail.js",[],[],"C:\\Users\\Emmett\\Documents\\GitHub\\prod_build\\src\\pages\\StudentApplication.js",[],[],"C:\\Users\\Emmett\\Documents\\GitHub\\prod_build\\src\\pages\\CoachApplication.js",[],[],"C:\\Users\\Emmett\\Documents\\GitHub\\prod_build\\src\\pages\\ServerError.js",[],[],"C:\\Users\\Emmett\\Documents\\GitHub\\prod_build\\src\\pages\\Home.js",[],[],"C:\\Users\\Emmett\\Documents\\GitHub\\prod_build\\src\\pages\\CoachesPage.js",[],[],"C:\\Users\\Emmett\\Documents\\GitHub\\prod_build\\src\\pages\\AboutUs.js",[],[],"C:\\Users\\Emmett\\Documents\\GitHub\\prod_build\\src\\pages\\Eligible.js",[],[],"C:\\Users\\Emmett\\Documents\\GitHub\\prod_build\\src\\pages\\Ineligible.js",[],[],"C:\\Users\\Emmett\\Documents\\GitHub\\prod_build\\src\\pages\\StudentsPage.js",[],[],"C:\\Users\\Emmett\\Documents\\GitHub\\prod_build\\src\\pages\\EligibilityCheck.js",[],[],"C:\\Users\\Emmett\\Documents\\GitHub\\prod_build\\src\\pages\\AdminLogin.js",[],[],"C:\\Users\\Emmett\\Documents\\GitHub\\prod_build\\src\\pages\\AdminUnauthorized.js",[],[],"C:\\Users\\Emmett\\Documents\\GitHub\\prod_build\\src\\pages\\AdminCoach.js",[],[],"C:\\Users\\Emmett\\Documents\\GitHub\\prod_build\\src\\pages\\MatchSuccess.js",[],[],"C:\\Users\\Emmett\\Documents\\GitHub\\prod_build\\src\\pages\\AdminStudent.js",[],[],"C:\\Users\\Emmett\\Documents\\GitHub\\prod_build\\src\\pages\\MatchingPage.js",[],[],"C:\\Users\\Emmett\\Documents\\GitHub\\prod_build\\src\\pages\\CoachMax.js",[],[],"C:\\Users\\Emmett\\Documents\\GitHub\\prod_build\\src\\pages\\StudentMatchedAlready.js",[],[],"C:\\Users\\Emmett\\Documents\\GitHub\\prod_build\\src\\pages\\statusCheck\\StatusCheck.js",[],[],"C:\\Users\\Emmett\\Documents\\GitHub\\prod_build\\src\\components\\adminNavbar\\adminNavbar.js",[],[],"C:\\Users\\Emmett\\Documents\\GitHub\\prod_build\\src\\components\\navbar\\Navbar.js",[],[],"C:\\Users\\Emmett\\Documents\\GitHub\\prod_build\\src\\components\\cateogry_box\\category_box.js",[],[],"C:\\Users\\Emmett\\Documents\\GitHub\\prod_build\\src\\components\\page_bubble\\page_bubble.js",[],[],{"ruleId":"312","severity":1,"message":"313","line":24,"column":8,"nodeType":"314","messageId":"315","endLine":24,"endColumn":20},{"ruleId":"312","severity":1,"message":"316","line":26,"column":8,"nodeType":"314","messageId":"315","endLine":26,"endColumn":16},{"ruleId":"312","severity":1,"message":"317","line":75,"column":10,"nodeType":"314","messageId":"315","endLine":75,"endColumn":14},{"ruleId":"318","severity":1,"message":"319","line":53,"column":16,"nodeType":"320","messageId":"321","endLine":53,"endColumn":28,"fix":"322"},{"ruleId":"312","severity":1,"message":"323","line":13,"column":12,"nodeType":"314","messageId":"315","endLine":13,"endColumn":22},{"ruleId":"318","severity":1,"message":"319","line":60,"column":12,"nodeType":"320","messageId":"321","endLine":60,"endColumn":24,"fix":"324"},{"ruleId":"325","severity":1,"message":"326","line":17,"column":21,"nodeType":"327","endLine":17,"endColumn":75},{"ruleId":"328","severity":1,"message":"329","line":18,"column":29,"nodeType":"327","endLine":18,"endColumn":104},{"ruleId":"328","severity":1,"message":"329","line":26,"column":29,"nodeType":"327","endLine":26,"endColumn":104},{"ruleId":"312","severity":1,"message":"330","line":5,"column":9,"nodeType":"314","messageId":"315","endLine":5,"endColumn":15},{"ruleId":"331","severity":1,"message":"332","line":8,"column":27,"nodeType":"333","messageId":"334","endLine":8,"endColumn":29},{"ruleId":"312","severity":1,"message":"335","line":18,"column":12,"nodeType":"314","messageId":"315","endLine":18,"endColumn":20},{"ruleId":"312","severity":1,"message":"336","line":2,"column":9,"nodeType":"314","messageId":"315","endLine":2,"endColumn":25},{"ruleId":"312","severity":1,"message":"337","line":2,"column":27,"nodeType":"314","messageId":"315","endLine":2,"endColumn":32},{"ruleId":"312","severity":1,"message":"338","line":2,"column":34,"nodeType":"314","messageId":"315","endLine":2,"endColumn":44},{"ruleId":"312","severity":1,"message":"339","line":6,"column":9,"nodeType":"314","messageId":"315","endLine":6,"endColumn":15},{"ruleId":"312","severity":1,"message":"340","line":17,"column":47,"nodeType":"314","messageId":"315","endLine":17,"endColumn":54},{"ruleId":"341","severity":1,"message":"342","line":106,"column":19,"nodeType":"343","messageId":"344","endLine":106,"endColumn":31},{"ruleId":"312","severity":1,"message":"345","line":2,"column":20,"nodeType":"314","messageId":"315","endLine":2,"endColumn":29},{"ruleId":null,"fatal":true,"severity":2,"message":"346","line":27,"column":7},"no-unused-vars","'matchSuccess' is defined but never used.","Identifier","unusedVar","'coachMax' is defined but never used.","'user' is assigned a value but never used.","no-useless-rename","Destructuring assignment field unnecessarily renamed.","Property","unnecessarilyRenamed",{"range":"347","text":"348"},"'resumeFile' is assigned a value but never used.",{"range":"349","text":"348"},"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'string' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'register' is assigned a value but never used.","'FormControlLabel' is defined but never used.","'Radio' is defined but never used.","'RadioGroup' is defined but never used.","'object' is defined but never used.","'control' is assigned a value but never used.","no-new-object","The object literal notation {} is preferable.","NewExpression","preferLiteral","'useEffect' is defined but never used.","Parsing error: Identifier 'MatchSuccess' has already been declared. (27:7)",[2367,2379],"field",[2445,2457]]